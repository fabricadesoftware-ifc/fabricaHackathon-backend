# Generated by Django 5.0.4 on 2024-10-02 19:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('workload', models.IntegerField()),
                ('acronym', models.CharField(max_length=10)),
                ('course_level', models.CharField(choices=[('tech', 'Técnico'), ('grad', 'Graduação'), ('postgrad', 'Pós-Graduação'), ('master', 'Mestrado'), ('doct', 'Doutorado')], max_length=10)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('weight', models.DecimalField(decimal_places=1, max_digits=3)),
            ],
            options={
                'verbose_name': 'Criterion',
                'verbose_name_plural': 'Criteria',
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_base64', models.TextField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'ordering': ['photo_base64'],
            },
        ),
        migrations.CreateModel(
            name='Supporter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='supporters')),
                ('link', models.URLField()),
            ],
            options={
                'verbose_name': 'Supporter',
                'verbose_name_plural': 'Supporters',
                'ordering': ['company'],
            },
        ),
        migrations.CreateModel(
            name='ClassInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('year', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hackathon.course')),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('semester', models.IntegerField()),
                ('applications_accepted', models.BooleanField(blank=True, default=True, null=True)),
                ('registration_deadline', models.DateField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('finish_date', models.DateField(blank=True, null=True)),
                ('min_members', models.IntegerField(blank=True, null=True)),
                ('max_members', models.IntegerField(blank=True, null=True)),
                ('avaliators', models.ManyToManyField(limit_choices_to={'is_avaliator': True}, to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(to='hackathon.category')),
                ('courses', models.ManyToManyField(to='hackathon.course')),
                ('criteria', models.ManyToManyField(to='hackathon.criterion')),
                ('involved_classes', models.ManyToManyField(limit_choices_to={'course__in': models.F('courses')}, to='hackathon.classinfo')),
                ('photo_base64_edition', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hackathon.images')),
                ('supporters', models.ManyToManyField(to='hackathon.supporter')),
            ],
            options={
                'verbose_name': 'Edition',
                'verbose_name_plural': 'Editions',
                'ordering': ['year', 'semester'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('registration', models.CharField(max_length=10)),
                ('whatsapp', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('github', models.URLField()),
                ('portfolio', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('class_info', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hackathon.classinfo', verbose_name='class')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('deploy_link', models.URLField(blank=True, null=True)),
                ('repository_link', models.URLField(blank=True, null=True)),
                ('presentation_link', models.URLField(blank=True, null=True)),
                ('video_link', models.URLField(blank=True, null=True)),
                ('pitch_link', models.URLField(blank=True, null=True)),
                ('registration_date', models.DateField(auto_now_add=True, null=True)),
                ('valid_registration', models.BooleanField(blank=True, default=False, null=True)),
                ('verification_token', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='hackathon.category')),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hackathon.edition')),
                ('leader', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='leader', to='hackathon.student')),
                ('photo_base64_team', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hackathon.images')),
                ('students', models.ManyToManyField(related_name='students', to='hackathon.student')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_grade', models.DecimalField(decimal_places=1, max_digits=3)),
                ('classification', models.IntegerField()),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hackathon.edition')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hackathon.team')),
            ],
            options={
                'verbose_name': 'Ranking',
                'verbose_name_plural': 'Rankings',
                'ordering': ['classification'],
            },
        ),
        migrations.CreateModel(
            name='Avaliation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.DecimalField(decimal_places=1, max_digits=3)),
                ('avaliator', models.ForeignKey(limit_choices_to={'is_avaliator': True}, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hackathon.criterion')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hackathon.team')),
            ],
            options={
                'verbose_name': 'Avaliation',
                'verbose_name_plural': 'Avaliations',
            },
        ),
    ]
